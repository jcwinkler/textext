language: python

branches:
  only:
  - master
  - develop
  - /^\d+\.\d+\.\d+?(-dev\d*)?$/  # 1.23.456 or 1.2.3-dev or 1.2.3-dev13
  - locally_signed_releases

virtualenv:
  system_site_packages: true

matrix:
  include:
    - os: linux
      dist: bionic
      python: '3.6'
      addons:
        apt:
          packages:
          - python3-gi
          - python3-gi-cairo
          - gir1.2-gtk-3.0
          - texlive-latex-base
          - texlive-fonts-recommended
          - texlive-lang-cyrillic
          - cm-super
          - libxml2-utils

    - os: linux
      dist: focal
      python: '3.8'
      addons:
        apt:
          packages:
          - python3-gi
          - python3-gi-cairo
          - gir1.2-gtk-3.0
          #- texlive-latex-base
          #- texlive-lang-cyrillic
          - libxml2-utils
      env:
        - RELEASE_MAKER=true

before_script:
  - echo "Entering before_script"
   #- python -m pip install pytest lxml Pillow
   #- sudo add-apt-repository --yes ppa:inkscape.dev/stable
   #- sudo apt update
   #- sudo apt install inkscape
   #- python test_installation_script.py 2> /dev/null
   #- python setup.py
   #- wget https://gitlab.com/inkscape/extensions/raw/master/inkscape.extension.rng

script:
  - echo "Entering script"
  #- export PYTHONPATH="`inkscape --system-data-directory`/extensions:$HOME/.config/inkscape/extensions/"
  #- python -m pytest --verbose -s pytests
  #- xmllint --noout --relaxng inkscape.extension.rng textext/textext.inx

# If this is a tagged build and script is run by a release maker
# check if we need to build the documentation or not
after_success:
  - echo "Entering after_success"
  - echo 'Travis tag :' $TRAVIS_TAG
  - echo 'Travis branch :' $TRAVIS_BRANCH
  - DO_DEPLOY=false
  - DO_GH_PAGES=false
  - GITHUB_DEPLOY_PRERELEASE=false
  - |
    if [ $RELEASE_MAKER = true ] && [ $TRAVIS_TAG ]; then
      echo "This is a tagged release maker!"
      DO_DEPLOY=true
      if echo $TRAVIS_TAG | grep -q "\-" ; then
        GITHUB_DEPLOY_PRERELEASE=true
        DO_GH_PAGES=false
      else
        GITHUB_DEPLOY_PRERELEASE=false;
        DO_GH_PAGES=true
      fi
    fi
  - echo $DO_DEPLOY
  - echo $GITHUB_DEPLOY_PRERELEASE
  - echo $DO_GH_PAGES

before_deploy:
  - echo "Entering before_deploy"
  - if [ $DO_GH_PAGES = true ]; then
      bash build_docs.sh ;
    fi

deploy:
  - provider: pages
    verbose: true
    local-dir: docs/build/html
    skip-cleanup: true
    github-token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable
    keep-history: false
    on:
      tags: false
      branch: master
      condition: $DO_GH_PAGES

  - provider: releases
    api_key:  $GITHUB_TOKEN
    prerelease: $GITHUB_DEPLOY_PRERELEASE
    skip_cleanup: true
    file_glob: true
    on:
      tags: false
      all_branches: true
      condition: $DO_DEPLOY
